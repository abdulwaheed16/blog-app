// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum ReactionType {
  LIKE
  LOVE
  HAHA
  WOW
  SAD
  ANGRY
}

// Models
model User {
  id                String   @id @default(uuid())
  username          String   @unique @db.VarChar(30)
  email             String   @unique @db.VarChar(255)
  password          String   @db.VarChar(255)
  profilePictureUrl String?  @db.VarChar(255)
  createdAt         DateTime @default(now())

  // Relations
  posts     Post[]
  comments  Comment[]
  reactions Reaction[]
}

model Post {
  id        String     @id @default(uuid())
  title     String     @db.VarChar(255)
  content   String
  authorId  String
  tags      String[]
  images    String[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    PostStatus @default(DRAFT)

  // Relations
  author     User       @relation(fields: [authorId], references: [id])
  comments   Comment[]
  categories Category[] @relation("PostCategories")
  reactions  Reaction[]
}

model Comment {
  id        String   @id @default(uuid())
  postId    String
  userId    String
  content   String   @db.VarChar(500)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Category {
  id          String  @id @default(uuid())
  name        String  @unique @db.VarChar(100)
  description String? @db.VarChar(255)

  // Relations
  posts Post[] @relation("PostCategories")
}

model Reaction {
  id           String       @id @default(uuid())
  postId       String
  userId       String
  reactionType ReactionType
  createdAt    DateTime     @default(now())

  // Relations
  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
